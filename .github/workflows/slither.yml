# https://github.com/marketplace/actions/slither-action
# https://github.com/crytic/slither

name: Slither Analysis
# on: [push]
on:
  # Only the default branch is supported.
  branch_protection_rule:
  schedule:
    - cron: '30 2 * * 0'
  push:
    branches: [ "main" ]
  # pull_request:
    # The branches below must be a subset of the branches above
  #   branches: [ "main" ]
  workflow_dispatch:
    
# Declare default permissions as read only.
permissions: read-all

jobs:
  analyze:
    name: slither analysis
    runs-on: ubuntu-latest
    permissions:
      # Needed to upload the results to code-scanning dashboard.
      security-events: write
      # Needs for private repositories.
      contents: read
      actions: read
    
    steps:
      - name: "Checkout code"
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # v3.0.0
        with:
          repository: Uniswap/v3-core
          # smartcontractkit/chainlink
          # FraxFinance/frax-solidity
          # path: ./src
          persist-credentials: false
    
      - name: "Slither action"
        uses: crytic/slither-action@35510b34cfdfb137d9816d27378ee8c217f1fa1c #v0.1.1
        id: slither
        with:
          sarif: results.sarif
          fail-on: none
          # target: 'src/'

      # Upload the results as artifacts (optional). Commenting out will disable uploads of run results in SARIF
      # format to the repository Actions tab.
      - name: "Upload artifact"
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # v3.0.0
        with:
          name: SARIF file
          # path: results.sarif
          path: ${{ steps.slither.outputs.sarif }}
          retention-days: 5
